<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brittany Woods</title>
    <description>Brittany is an automater of the things, a devops practitioner, a speaker, a shade queen, and an animal lover.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 30 Apr 2020 00:18:02 +0300</pubDate>
    <lastBuildDate>Thu, 30 Apr 2020 00:18:02 +0300</lastBuildDate>
    <generator>Jekyll v3.6.3</generator>
    
      <item>
        <title>Scanning AWS Accounts with Chef Inspec</title>
        <description>&lt;h3 id=&quot;background&quot;&gt;Background&lt;/h3&gt;

&lt;p&gt;Scanning for cloud compliance is critical. Using Inspec, you can easily scan AWS accounts to ensure adherance to your internal policies. Not only can you used Inspec to custom tailor your cloud policies, but you can use that in conjunction with Chef Compliance for on demand scanning, automated scanning on a schedule, and dashboards.&lt;/p&gt;

&lt;p&gt;For now, this guide will cover how to upload a profile to Chef Compliance within Chef Automate’s UI, how to set up the built in AWS integration, and how to set up a scan job to scan the account.&lt;/p&gt;

&lt;h3 id=&quot;the-profile&quot;&gt;The Profile&lt;/h3&gt;

&lt;p&gt;If you have access to premium content in Chef Automate, a good place to start is with the AWS CIS Foundations Level 1.&lt;/p&gt;

&lt;p&gt;If you do not, I have started an example profile on &lt;a href=&quot;https://github.com/bnwoods/aws-cloud-compliance&quot;&gt;my github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Profiles are also really easy to write yourself. As every organization is different, this is recommended to ensure organizational level requirements are being captured.&lt;/p&gt;

&lt;h3 id=&quot;scanning-nodes-using-chef-compliance&quot;&gt;Scanning Nodes Using Chef Compliance&lt;/h3&gt;

&lt;h4 id=&quot;uploading-your-profile&quot;&gt;Uploading Your Profile&lt;/h4&gt;

&lt;p&gt;Navigate to your Chef Automate instance&lt;/p&gt;

&lt;p&gt;Click on the Compliance button at the top of the page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2019/scanning-aws-with-inspec/compliance-main-button.png&quot; alt=&quot;Chef Automate Compliance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the profiles button on the left side of the page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2019/scanning-aws-with-inspec/profiles-button.png&quot; alt=&quot;Chef Automate Compliance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the Upload Profile button&lt;/p&gt;

&lt;p&gt;Click Select File in the pop-up and select your .zip file of your profile.&lt;/p&gt;

&lt;p&gt;At this point, your profile will be verified and uploaded into Chef Compliance under the namespace of the currently logged in user.&lt;/p&gt;

&lt;h4 id=&quot;setting-up-your-aws-integration&quot;&gt;Setting Up Your AWS Integration&lt;/h4&gt;

&lt;p&gt;Navigate to your Chef Automate instance&lt;/p&gt;

&lt;p&gt;Click on the Settings button at the top of the page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2019/scanning-aws-with-inspec/settings-main-button.png&quot; alt=&quot;Chef Automate Settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the Node Integrations button on the left side of the page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2019/scanning-aws-with-inspec/node-integrations-button.png&quot; alt=&quot;Chef Automate Node Integrations&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the Create Integration button&lt;/p&gt;

&lt;p&gt;Select AWS and fill out the form keeping the following in mind:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Name your integration something meaningful&lt;/li&gt;
  &lt;li&gt;Select “API” for service. This will auto discover all regions in the integrated account. If you intend to scan actual EC2 instances, using the EC2 service type would be acceptable. This will auto discover all EC2 instances in the integrated account.&lt;/li&gt;
  &lt;li&gt;This is going to require AWS Access Keys for the account you intend to integrate. The account you intend to use should have at minimum global read permissions (&lt;code class=&quot;highlighter-rouge&quot;&gt;arn:aws:iam::aws:policy/ReadOnlyAccess&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you’ve filled out all the information, click Save Integration&lt;/p&gt;

&lt;h4 id=&quot;creating-a-scan-job-for-your-aws-account&quot;&gt;Creating a Scan Job For Your AWS Account&lt;/h4&gt;

&lt;p&gt;Navigate to your Chef Automate instance&lt;/p&gt;

&lt;p&gt;Click on the Compliance button at the top of the page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2019/scanning-aws-with-inspec/compliance-main-button.png&quot; alt=&quot;Chef Automate Compliance&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the Scan Jobs button on the left side of the page&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2019/scanning-aws-with-inspec/scan-jobs-button.png&quot; alt=&quot;Chef Automate Node Integrations&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click Create New Job&lt;/p&gt;

&lt;p&gt;Select your AWS integration from the list&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can filter what accounts/regions you want to scan from this page using filters and tags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Set your schedule for your scan. If you want this scan to happen immediately and only 1 time, do not set a schedule.&lt;/p&gt;

&lt;p&gt;Save your job&lt;/p&gt;

&lt;p&gt;Once this scan job runs, you can view reports related to your specific regions’ compliance.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Sep 2019 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/Scanning-AWS-Accounts-With-Chef-Compliance</link>
        <guid isPermaLink="true">http://localhost:4000/Scanning-AWS-Accounts-With-Chef-Compliance</guid>
        
        <category>Chef Automate</category>
        
        <category>Inspec</category>
        
        <category>AWS</category>
        
        
      </item>
    
      <item>
        <title>Creating a Cookbook Pipeline Using Azure DevOps</title>
        <description>&lt;h4 id=&quot;creating-the-pipeline-in-azure-devops&quot;&gt;Creating the pipeline in azure devops&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;In your Azure DevOps Instance, click “Create Project”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/azure-devops-pipeline/create-new-project.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Once your project has been created, on the left side click builds in the pipeline menu, then click “New Pipeline” on the right.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/azure-devops-pipeline/new-pipeline.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In the New pipeline view, on the right under “Where is your code”, click the “Use the visual designer” link.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/azure-devops-pipeline/where-is-your-code.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Select the location of your code as a source and set the default branh for scheduled builds, then click continue.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the top right, choose empty job when you get to the template screen.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On your pipeline screen, first update your agent pool to use whatever OS you intend to test with. Then in the “Agent Job 1” box, you’ll click the plus sign to the right of the box.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/azure-devops-pipeline/creating-agent-job-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From here, in the “Add tasks” menu on the right, click Marketplace, then in the search box you’ll type Chef. When Chef Integration shows up, click “Get it free”. You’ll be redirected to another screen where you will again click “Get it free”, then you’re prompted to select an Azure DevOps Organization where you would like to install it. After making your selection, click install.
    &lt;ul&gt;
      &lt;li&gt;Once it’s finished installing, you’ll click “Proceed to organization”.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When you get back to the main Azure DevOps page for your organization, click your project, then click pipelines again on the left. You’ll need to go through the steps we went through previously again (ie. Click build, create a new pipeline, click visual designer, etc).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Back in the add tasks menu, search Chef. You will notice that a bunch of Chef tasks come up this time. The first one you want to add is going to be “Install ChefDK”.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/azure-devops-pipeline/add-tasks.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;From here, you can add other tasks as well. * Many of the testing tasks like cookbook linting use rake. If you do not have a rakefile, and you do not want to create/use one you can simply use the script task and give it a chefdk command like &lt;code class=&quot;highlighter-rouge&quot;&gt;foodcritic .&lt;/code&gt;. * If you take this option, make sure to give the full path to the executable.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once you are satisfied with your steps, and if you want this pipeline to auto execute, click triggers and enable continuous integration.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/azure-devops-pipeline/enable-continuous-integration.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 30 Oct 2018 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/Cookbook-Pipeline-with-Azure-Devops</link>
        <guid isPermaLink="true">http://localhost:4000/Cookbook-Pipeline-with-Azure-Devops</guid>
        
        <category>Chef</category>
        
        <category>Azure</category>
        
        
      </item>
    
      <item>
        <title>Chef Automate 2.0 SAML Setup with Okta</title>
        <description>&lt;h4 id=&quot;creating-the-app-in-okta&quot;&gt;Creating the App in Okta:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Log in to Okta as an admin (you will not be able to add an app without admin access to Okta)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;From your dashboard, click “Add applications” then click “Create New App”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the dialog box for “Create a New Application Integration”, ensure platform equals Web and you select the SAML 2.0 radio button. Then click create&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2018/a2-saml/new-app-dialog.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Fill in the name of your app and add a logo on the next screen, then click next&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the SAML settings screen, use the following settings in the form then click next:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Single sign on URL&lt;/em&gt;: This should be the URL for your automate server plus /dex/callback. Example: https://your-automate.server/dex/callback&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Audience URI&lt;/em&gt;: This will be the same URL as Single sign on URL&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Default RelayState&lt;/em&gt; should be blank&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Name ID Format&lt;/em&gt; should be Unspecified&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;Application Username&lt;/em&gt; should be Email&lt;/li&gt;
      &lt;li&gt;Under &lt;em&gt;attributes&lt;/em&gt; you’ll want to create two:
        &lt;ul&gt;
          &lt;li&gt;&lt;em&gt;Name&lt;/em&gt;: email  &lt;em&gt;Value&lt;/em&gt;: user.email&lt;/li&gt;
          &lt;li&gt;&lt;em&gt;Name&lt;/em&gt;: username    &lt;em&gt;Value&lt;/em&gt;: user.login&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;_For Information on Group Attribute Statements, refer to the Automate 2.0 documentation_&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2018/a2-saml/saml-settings-okta.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;For the final okta page, you’ll select “I’m an Okta Customer adding an internal app”. The rest of the information on this page is optional. When you’re finished, click finish.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You will now be taken to an application overview page. Click “View Setup Instructions” under sign on methods.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2018/a2-saml/blog/application-overview.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keep the Setup Instructions open for use in your config on the A2 server&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;setting-up-saml-on-the-a2-server&quot;&gt;Setting up SAML on the A2 server:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;ssh to your A2 instance&lt;/li&gt;
  &lt;li&gt;create a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;saml.toml&lt;/code&gt; where we will put in configuration information&lt;/li&gt;
  &lt;li&gt;In the saml.toml file, you will need to add the following information in the example format listed in the image below:
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;ca_contents&lt;/em&gt;: this is the X.509 Certificate on the Setup Instructions page. Copy this and paste as the value for ca_contents. Use three double quotes to indicate a multiline string. (ex: &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&quot;&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;sso_url&lt;/em&gt;: This is the value for Identity Provider Single Sign-On URL listed on the Setup Instructions page in Okta&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;email_attr&lt;/em&gt;: The value for this should be email&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;username_attr&lt;/em&gt;: The value for this should be username&lt;/li&gt;
      &lt;li&gt;&lt;em&gt;entity_issuer&lt;/em&gt;: This should be the URL for your automate server plus /dex/callback. Example: https://your-automate.server/dex/callback&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Save and close the file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2018/a2-saml/blog/saml-toml-format.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Now, run &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ./chef-automate config patch saml.toml&lt;/code&gt;. You should get a success message that looks like the message below:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/2018/a2-saml/blog/patch-success.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Navigate to your A2 instance in your browser and select the Log in with SAML option.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;gotchas&quot;&gt;Gotchas&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Clicking the tile in Okta is not currently supported. You will have to navigate in browser to your A2 instance as before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Full setup documentation can be found at &lt;a href=&quot;https://automate.chef.io/docs/configuration/&quot;&gt;https://automate.chef.io/docs/configuration/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Oct 2018 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/Automate-2-SAML</link>
        <guid isPermaLink="true">http://localhost:4000/Automate-2-SAML</guid>
        
        <category>Chef Automate</category>
        
        
      </item>
    
  </channel>
</rss>
